import java.util.ArrayList;
import java.util.Comparator;
import java.util.Scanner;

public class Main {
    static class Student {
        String name;
        int age;
        String email;
        String phone;
        String code;
        int gender; // 1 for Male, 2 for Female
        float grade;

        public Student(String name, int age, String email, String phone, String code, int gender, float grade) {
            this.name = name;
            this.age = age;
            this.email = email;
            this.phone = phone;
            this.code = code;
            this.gender = gender;
            this.grade = grade;
        }

        @Override
        public String toString() {
            return "Student{" +
                    "name='" + name + '\'' +
                    ", age=" + age +
                    ", email='" + email + '\'' +
                    ", phone='" + phone + '\'' +
                    ", code='" + code + '\'' +
                    ", gender=" + (gender == 1 ? "Male" : "Female") +
                    ", grade=" + grade +
                    '}';
        }
    }

    public static class StudentManagement {
        static ArrayList<Student> students = new ArrayList<>();
        static Scanner scanner = new Scanner(System.in);

        public static void main(String[] args) {
            int choice;
            do {
                System.out.println("1. Add new student");
                System.out.println("2. Display list of students");
                System.out.println("3. Delete student by code");
                System.out.println("4. Sort students by descending score");
                System.out.println("5. Search for students by code or name");
                System.out.println("6. Search for students with points >= x");
                System.out.println("0. Exit");
                System.out.print("Enter your selection: ");
                while (!scanner.hasNextInt()) {
                    System.out.println("Invalid input. Please enter a number.");
                    scanner.next();
                }
                choice = scanner.nextInt();
                scanner.nextLine(); // Consume newline
                switch (choice) {
                    case 1:
                        addStudent();
                        break;
                    case 2:
                        displayStudents();
                        break;
                    case 3:
                        deleteStudentByCode();
                        break;
                    case 4:
                        sortStudentsByGrade();
                        break;
                    case 5:
                        searchStudentByCodeOrName();
                        break;
                    case 6:
                        searchStudentsByGrade();
                        break;
                    case 0:
                        System.out.println("Exit the program...");
                        break;
                    default:
                        System.out.println("Invalid selection! Please try again.");
                }
            } while (choice != 0);
        }

        public static void addStudent() {
            try {
                System.out.print("Enter name: ");
                String name = scanner.nextLine();
                System.out.print("Enter age: ");
                int age = Integer.parseInt(scanner.nextLine());
                System.out.print("Enter email: ");
                String email = scanner.nextLine();
                System.out.print("Enter phone number: ");
                String phone = scanner.nextLine();
                System.out.print("Enter student code: ");
                String code = scanner.nextLine();
                System.out.print("Enter gender (1 for Male, 2 for Female): ");
                int gender = Integer.parseInt(scanner.nextLine());
                System.out.print("Input score: ");
                float grade = Float.parseFloat(scanner.nextLine().replace(',', '.'));
                students.add(new Student(name, age, email, phone, code, gender, grade));
                System.out.println("Student added successfully.");
            } catch (NumberFormatException e) {
                System.out.println("Invalid input. Please enter the correct data type.");
            }
        }

        public static void displayStudents() {
            if (students.isEmpty()) {
                System.out.println("There are no students to display.");
            } else {
                for (Student student : students) {
                    System.out.println(student);
                }
            }
        }

        public static void deleteStudentByCode() {
            System.out.print("Enter the student code to be deleted: ");
            String code = scanner.nextLine();
            if (students.removeIf(student -> student.code.equals(code))) {
                System.out.println("Student deleted successfully.");
            } else {
                System.out.println("No student found with the given code.");
            }
        }

        public static void sortStudentsByGrade() {
            students.sort(Comparator.comparingDouble(student -> -student.grade));
            System.out.println("The student list has been sorted by descending score.");
        }

        public static void searchStudentByCodeOrName() {
            System.out.print("Enter the code or name of the student you want to search for: ");
            String keyword = scanner.nextLine();
            boolean found = false;
            for (Student student : students) {
                if (student.code.equalsIgnoreCase(keyword) || student.name.equalsIgnoreCase(keyword)) {
                    System.out.println(student);
                    found = true;
                }
            }
            if (!found) {
                System.out.println("No student found with the given code or name.");
            }
        }

        public static void searchStudentsByGrade() {
            System.out.print("Enter the score threshold: ");
            try {
                float gradeThreshold = Float.parseFloat(scanner.nextLine().replace(',', '.'));
                boolean found = false;
                for (Student student : students) {
                    if (student.grade >= gradeThreshold) {
                        System.out.println(student);
                        found = true;
                    }
                }
                if (!found) {
                    System.out.println("No students found with grade >= " + gradeThreshold);
                }
            } catch (NumberFormatException e) {
                System.out.println("Invalid input. Please enter a valid grade.");
            }
        }
    }
}

